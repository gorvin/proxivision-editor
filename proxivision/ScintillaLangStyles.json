{
    "TODO": [
        "Ikonice kao base64 za pojedine poznate ekstenzije",
        "lexeri kao plugini .[so|dll]"
    ],
    "classes": {
        "GDEFAULT": {
            "decription": "Used for 'PLAIN', null or no settings",
            "fg": "#000000", "bg": "#FFFFFF", "bold": false, "italic": false
        },
        "GCOMMENT": { 
            "decription": "Used for 'GCOMMENT' settings",
            "fg": "#CCCCCC", "bg": "#FFFFFF", "bold": false, "italic": true
        },
        "GSTRING": { 
            "decription": "Used for 'GSTRING' settings",
            "fg": "#FF0000", "bg": "#FFFFFF", "bold": false, "italic": false
        },
        "GNUMBER": { 
            "decription": "Used for 'GNUMBER' settings",
            "fg": "#C000FF", "bg": "#FFFFFF", "bold": false, "italic": false
        },
        "GPREPROC": { 
            "decription": "Used for 'GPREPROC' settings",
            "fg": "#008000", "bg": "#FFFFFF", "bold": false, "italic": false
        },
        "GOPERATOR": { 
            "decription": "Used for 'GOPERATOR' settings",
            "fg": "#8800FF", "bg": "#FFFFFF", "bold": false, "italic": false
        },
        "GSTRINGEOL": { 
            "decription": "Used for 'GSTRINGEOL' settings",
            "fg": "#FF0000", "bg": "#FFFFFF", "bold": false, "italic": false
        },
        "GKEYWORD1": { 
            "decription": "Used for 'GKEYWORD1' settings",
            "fg": "#0000FF", "bg": "#FFFFFF", "bold": false, "italic": false
        },
        "GKEYWORD2": { 
            "decription": "Used for 'GKEYWORD2' settings",
            "fg": "#0055FF", "bg": "#FFFFFF", "bold": false, "italic": false
        },
        "GKEYWORD3": { 
            "decription": "Used for 'GKEYWORD3' settings",
            "fg": "#0099FF", "bg": "#FFFFFF", "bold": false, "italic": false
        },
        "GSCALAR": { 
            "decription": "Used for 'GSCALAR' settings",
            "fg": "#00BBBB", "bg": "#FFFFFF", "bold": false, "italic": false
        },
        "GHERE": { 
            "decription": "Used for 'GBASHHERE' settings",
            "fg": "#00BBBB", "bg": "#CCCCDD", "bold": false, "italic": false
        }
    },
    "colors": {
        "orange": "#FF8080",
        "purple": "#CC00CC"
    },
    "use_tabs": true,
    "TODO2": "broj space-ova u tabu",
    "scintilla_langs": {
        "cmake": {
            "decription": "These are user setting for each text class known by CMake Scintilla Lexer (see its documentation or source code).",
            "id": 80,
            "extensions": "CMakeLists.txt|*.cmake|*.cmake.in|*.ctest|*.ctest.in",
            "use_tabs": true,
            "styles": {
                "subclasses": ["plain", "comment", "stringdq", "stringlq", "stringrq", "commands", "parameters", "variable",
                    "user_defined", "while_def", "for_each_def", "if_define_def", "macro_def", "string_var", "number"],
                "comment": {
                    "decription": "This is just an example how style could be overrided just for single subclass",
                    "class": "GCOMMENT", "italic": false 
                },
                "stringdq": { "class": "GSTRING" },
                "stringlq": { "class": "GSTRING" },
                "stringrq": { "class": "GSTRING" },
                "string_var": { "class": "GSTRING" },
                "number": { "class": "GNUMBER" }
            },
            "keywords": [[
                    "add_custom_command add_custom_target add_definitions add_dependencies ",
                    "add_executable add_library add_subdirectory add_test aux_source_directory ",
                    "build_command build_name cmake_minimum_required configure_file ",
                    "create_test_sourcelist else elseif enable_language enable_testing ",
                    "endforeach endif endmacro endwhile exec_program execute_process ",
                    "export_library_dependencies file find_file find_library find_package ",
                    "find_path find_program fltk_wrap_ui foreach get_cmake_property ",
                    "get_directory_property get_filename_component get_source_file_property ",
                    "get_target_property get_test_property if include include_directories ",
                    "include_external_msproject include_regular_expression install ",
                    "install_files install_programs install_targets link_directories ",
                    "link_libraries list load_cache load_command macro make_directory ",
                    "mark_as_advanced math message option output_required_files project ",
                    "qt_wrap_cpp qt_wrap_ui remove remove_definitions separate_arguments set ",
                    "set_directory_properties set_source_files_properties ",
                    "set_target_properties set_tests_properties site_name source_group string ",
                    "subdir_depends subdirs target_link_libraries try_compile try_run ",
                    "use_mangled_mesa utility_source variable_requires vtk_make_instantiator ",
                    "vtk_wrap_java vtk_wrap_python vtk_wrap_tcl while write_file"
                ], [
                    "ABSOLUTE ABSTRACT ADDITIONAL_MAKE_CLEAN_FILES ALL AND APPEND ARGS ASCII ",
                    "BEFORE CACHE CACHE_VARIABLES CLEAR COMMAND COMMANDS COMMAND_NAME COMMENT ",
                    "COMPARE COMPILE_FLAGS COPYONLY DEFINED DEFINE_SYMBOL DEPENDS DOC EQUAL ",
                    "ESCAPE_QUOTES EXCLUDE EXCLUDE_FROM_ALL EXISTS EXPORT_MACRO EXT ",
                    "EXTRA_INCLUDE FATAL_ERROR FILE FILES FORCE FUNCTION GENERATED GLOB ",
                    "GLOB_RECURSE GREATER GROUP_SIZE HEADER_FILE_ONLY HEADER_LOCATION ",
                    "IMMEDIATE INCLUDES INCLUDE_DIRECTORIES INCLUDE_INTERNALS ",
                    "INCLUDE_REGULAR_EXPRESSION LESS LINK_DIRECTORIES LINK_FLAGS LOCATION ",
                    "MACOSX_BUNDLE MACROS MAIN_DEPENDENCY MAKE_DIRECTORY MATCH MATCHALL ",
                    "MATCHES MODULE NAME NAME_WE NOT NOTEQUAL NO_SYSTEM_PATH OBJECT_DEPENDS ",
                    "OPTIONAL OR OUTPUT OUTPUT_VARIABLE PATH PATHS POST_BUILD ",
                    "POST_INSTALL_SCRIPT PREFIX PREORDER PRE_BUILD PRE_INSTALL_SCRIPT PRE_LINK ",
                    "PROGRAM PROGRAM_ARGS PROPERTIES QUIET RANGE READ REGEX REGULAR_EXPRESSION ",
                    "REPLACE REQUIRED RETURN_VALUE RUNTIME_DIRECTORY SEND_ERROR SHARED SOURCES ",
                    "STATIC STATUS STREQUAL STRGREATER STRLESS SUFFIX TARGET TOLOWER TOUPPER ",
                    "VAR VARIABLES VERSION WIN32 WRAP_EXCLUDE WRITE APPLE MINGW MSYS CYGWIN ",
                    "BORLAND WATCOM MSVC MSVC_IDE MSVC60 MSVC70 MSVC71 MSVC80 ",
                    "CMAKE_COMPILER_2005 OFF ON "
                ], [
                    ""
                ]
            ]
        },
        "cplusplus": {
            "id": 3,
            "extensions": "*.c|*.cc|*.cpp|*.cxx|*.h|*.hh|*.hpp|*.hxx|*.ipp|*.sma|*.java|*.jad|*.pde",
            "styles": {
                "subclasses": [ "plain", "comment", "commentline", "commentdoc", "number", "word", "string", "character",
                    "uuid", "preprocessor", "operator", "identifier", "stringeol", "verbatim", "regex", "commentlinedoc",
                    "word2", "commentdockeyword", "commentdockeyworderror", "globalclass", "stringraw", "tripleverbatim"
                ],
                "comment": { "class": "GCOMMENT" },
                "commentline": { "class": "GCOMMENT" },
                "commentdoc": { "class": "GCOMMENT" },
                "number": { "class": "GNUMBER" },
                "word": { "class": "GKEYWORD1", "bold": true },
                "string": { "class": "GSTRING" },
                "character": { "class": "GSTRING" },
                "preprocessor": { "class": "GPREPROC" },
                "operator": { "class": "GOPERATOR", "bold": true },
                "stringeol": { "class": "GSTRINGEOL" },
                "commentlinedoc": { "class": "GCOMMENT" },
                "word2": { "class": "GKEYWORD2", "bold": true },
                "commentdockeyword": { "class": "GKEYWORD1", "bold": true },
                "commentdockeyworderror": { "class": "GKEYWORD1", "bold": true },
                "globalclass": { "class": "GKEYWORD3", "bold": true },
                "stringraw": { "class": "GSTRING" },
                "tripleverbatim": { "class": "GKEYWORD2" }
            },
            "keywords": [[
                "if else switch case default break goto return for while do continue typedef ",
                "sizeof NULL new delete throw try catch namespace operator this const_cast ",
                "static_cast dynamic_cast reinterpret_cast true false using typeid and ",
                "and_eq bitand bitor compl not not_eq or or_eq xor xor_eq"
            ], [
                "__asm __asume __based __box __cdecl __declspec __delegate delegate ",
                "depreciated dllexport dllimport event __event __except __fastcall __finally ",
                "__forceinline __int8 __int16 __int32 __int64 __int128 __interface interface ",
                "__leave naked noinline __noop noreturn nothrow novtable nullptr safecast ",
                "__stdcall __try __except __finally __unaligned uuid __uuidof ",
                "__virtual_inheritance finally",
                "abstract assert boolean byte extends final implements import ",
                "instanceof native package strictfp super synchronized throws transient var "
            ], [
                "a addindex addtogroup anchor arg attention author b brief bug c class code ",
                "date def defgroup deprecated dontinclude e em endcode endhtmlonly endif ",
                "endlatexonly endlink endverbatim enum example exception f$ f[ f] file fn ",
                "hideinitializer htmlinclude htmlonly if image include ingroup internal ",
                "invariant interface latexonly li line link mainpage name namespace ",
                "nosubgrouping note overload p page par param post preref relates remarks ",
                "return retval sa section see showinitializer since skip skipline struct ",
                "subsection test throw throws todo typedef union until var verbatim ",
                "verbinclude version warning weakgroup $ @ \\ &amp; &lt; &gt; # { }"
            ], [
                "void struct union enum char short int long double float signed unsigned ",
                "const static extern auto register volatile bool class private protected ",
                "public friend inline template virtual asm explicit typename mutable wchar_t"
            ]]
        }
    }
}
